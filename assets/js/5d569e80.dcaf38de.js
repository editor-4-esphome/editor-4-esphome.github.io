"use strict";(self.webpackChunkx=self.webpackChunkx||[]).push([["7227"],{9646:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>t,default:()=>h,toc:()=>c,metadata:()=>r,assets:()=>a,contentTitle:()=>l});var r=JSON.parse('{"id":"language/core-concepts","title":"Core Concepts","description":"In Editor for ESPHome, the final device configuration is not written in a single YAML file. Instead, it\u2019s dynamically assembled from multiple source and patch files.","source":"@site/docs/03-language/core-concepts.md","sourceDirName":"03-language","slug":"/language/core-concepts","permalink":"/language/core-concepts","draft":false,"unlisted":false,"editUrl":"https://github.com/Morcatko/EspHome-Editor/tree/main/docs/docs/03-language/core-concepts.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"Writing ESPHome configs","permalink":"/category/writing-esphome-configs"},"next":{"title":"Folder Structure & Files","permalink":"/language/folder-structure"}}'),i=s(5893),o=s(65);let t={sidebar_position:10},l="Core Concepts",a={},c=[{value:"How Compilation Works",id:"how-compilation-works",level:3},{value:"Step-by-Step Process",id:"step-by-step-process",level:3}];function d(e){let n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"core-concepts",children:"Core Concepts"})}),"\n",(0,i.jsxs)(n.p,{children:["In ",(0,i.jsx)(n.strong,{children:"Editor for ESPHome"}),", the final device configuration is not written in a single YAML file. Instead, it\u2019s dynamically assembled from multiple source and patch files."]}),"\n",(0,i.jsx)(n.p,{children:"This modular approach makes it easy to manage, reuse, and tweak parts of your device configuration \u2014 without repeating yourself."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"how-compilation-works",children:"How Compilation Works"}),"\n",(0,i.jsxs)(n.p,{children:["Editor for ESPHome does ",(0,i.jsx)(n.strong,{children:"not"})," compile or flash firmware itself. Instead, it:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Assembles"})," your configuration files into a single YAML file"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Connects"})," to your existing ",(0,i.jsx)(n.strong,{children:"ESPHome Builder"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Uploads"})," the generated YAML file to ESPHome"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"ESPHome then handles the actual compilation and firmware flashing, as usual."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"step-by-step-process",children:"Step-by-Step Process"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Scan the Device Directory"}),(0,i.jsx)(n.br,{}),"\n","The editor scans the selected device folder for source files."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Preprocess Source Files"}),(0,i.jsx)(n.br,{}),"\n","Files using template syntax (like ",(0,i.jsx)(n.code,{children:".eta.js"}),") are rendered into plain YAML."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Merge into a Single YAML"}),(0,i.jsx)(n.br,{}),"\n","All processed files are combined into a single YAML configuration."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Apply Patches"}),(0,i.jsx)(n.br,{}),"\n","The editor scans for any patch files, processes them, and applies them to the merged YAML to produce the final ESPHome-compatible configuration."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Upload to ESPHome"}),(0,i.jsx)(n.br,{}),"\n","The final YAML is uploaded to your ESPHome Builder for compilation or flashing."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["You can ",(0,i.jsx)(n.a,{href:"/language/disable-file",children:"enable or disable individual files"})," to quickly test different configurations or features."]})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.mermaid,{value:'---\r\nconfig:\r\n  layout: elk\r\n---\r\nflowchart LR\r\n    f1a[".yaml.eta"] --\x3e f1b["Compile"]\r\n    f1b --\x3e f1c[".yaml"]\r\n    f1c --\x3e assemble["Final ESPHome configuration"]\r\n    f2[".yaml"] --\x3e assemble\r\n    f5a[".patch.eta"] --\x3e f5b["Compile"]\r\n    f5b --\x3e f5c[".patch"]\r\n    f5c --\x3e assemble\r\n    f6[".yaml.patch"] --\x3e assemble\r\n    f1a@{ shape: text}\r\n    f1c@{ shape: text}\r\n    assemble@{ shape: procs}\r\n    f2@{ shape: text}\r\n    f5a@{ shape: text}\r\n    f5c@{ shape: text}\r\n    f6@{ shape: text}'}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Next up: Let\u2019s look at how to structure a project."})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);