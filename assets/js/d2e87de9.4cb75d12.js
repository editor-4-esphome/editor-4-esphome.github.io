"use strict";(self.webpackChunkx=self.webpackChunkx||[]).push([["4991"],{5920:function(n,e,r){r.r(e),r.d(e,{frontMatter:()=>o,default:()=>p,toc:()=>h,metadata:()=>i,assets:()=>u,contentTitle:()=>c});var i=JSON.parse('{"id":"code-samples/shift-registers","title":"Shift Registers","description":"You can build a PLC-like device with many inputs and outputs using 74HC165 and 74HC595 shift registers. This is ideal for scenarios where you need dozens of GPIO pins for switches, sensors, or actuators, but have limited physical pins on your microcontroller.","source":"@site/docs/04-code-samples/shift-registers.mdx","sourceDirName":"04-code-samples","slug":"/code-samples/shift-registers","permalink":"/code-samples/shift-registers","draft":false,"unlisted":false,"editUrl":"https://github.com/Morcatko/EspHome-Editor/tree/main/docs/docs/04-code-samples/shift-registers.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Room Sensors","permalink":"/code-samples/room-sensor"}}'),t=r(5893),s=r(65),a=r(7902),l=r(5525);let o={},c="Shift Registers",u={},h=[{value:"Goal",id:"goal",level:2},{value:"Shift Registers Library",id:"shift-registers-library",level:2},{value:"Device Inputs/Outputs",id:"device-inputsoutputs",level:2},{value:"YAML Patch",id:"yaml-patch",level:2}];function d(n){let e={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"shift-registers",children:"Shift Registers"})}),"\n",(0,t.jsxs)(e.p,{children:["You can build a ",(0,t.jsx)(e.strong,{children:"PLC-like device"})," with many inputs and outputs using ",(0,t.jsx)(e.code,{children:"74HC165"})," and ",(0,t.jsx)(e.code,{children:"74HC595"})," shift registers. This is ideal for scenarios where you need dozens of GPIO pins for switches, sensors, or actuators, but have limited physical pins on your microcontroller."]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"goal",children:"Goal"}),"\n",(0,t.jsxs)(e.p,{children:["We'll create a reusable ",(0,t.jsx)(e.strong,{children:"library file"})," using an ",(0,t.jsx)(e.code,{children:".eta"})," template to generate a customizable number of inputs and outputs."]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"The number of inputs and outputs will be the same for simplicity."}),"\n",(0,t.jsxs)(e.li,{children:["Binary sensors and switches will have auto-generated IDs using the pattern:",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.code,{children:"input_{chip_index}_{pin_index}"})," and ",(0,t.jsx)(e.code,{children:"output_{chip_index}_{pin_index}"}),(0,t.jsx)(e.br,{}),"\n","(e.g. ",(0,t.jsx)(e.code,{children:"input_00_0"}),", ",(0,t.jsx)(e.code,{children:"output_03_7"}),", etc.)"]}),"\n",(0,t.jsx)(e.li,{children:"Some inputs will have customized names and automations"}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"shift-registers-library",children:"Shift Registers Library"}),"\n",(0,t.jsx)(e.p,{children:"Here's what the library file might look like:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",metastring:'title="PLC/.lib/shift.eta" showLineNumbers',children:"<%-\r\n  const toDec = (number) => number?.toString(10)?.padStart(2, '0');\r\n  const pinToId = (chip, pin) => `${toDec(chip)}_${pin%8}`;\r\n-%>\r\n\r\nsn74hc165:\r\n  - id: sn74hc165_hub\r\n    data_pin: 9 \r\n    clock_pin: 11\r\n    load_pin: 10\r\n    sr_count: <%= it.count*2 %>\r\n\r\nbinary_sensor:\r\n<%- for (var i_chip = 0; i_chip < it.count; i_chip++) { %>\r\n<%- for (var i_pin = 0; i_pin < 8; i_pin++) { %>\r\n  - platform: gpio\r\n    id: input_<%= pinToId(i_chip, i_pin) %>\r\n    pin:\r\n      sn74hc165: sn74hc165_hub\r\n      number: <%= i_chip*8 + i_pin %>\r\n      inverted: true\r\n<%- } %>\r\n<%- } %>\r\n\r\nsn74hc595:\r\n  - id: sn74hc595_hub\r\n    data_pin: 12\r\n    clock_pin: 13\r\n    latch_pin: 14\r\n    sr_count: <%= it.count %>\r\n\r\nswitch:\r\n<%- for (var i_chip = 0; i_chip < it.count; i_chip++) { %>\r\n<%- for (var i_pin = 0; i_pin < 8; i_pin++) { %>\r\n  - platform: gpio\r\n    id: output_<%= pinToId(i_chip, i_pin) %>\r\n    pin:\r\n      sn74hc595: sn74hc595_hub\r\n      number: <%= i_chip*8 + i_pin %>\r\n<%- } %>\r\n<%- } %>\n"})}),"\n",(0,t.jsx)(e.h2,{id:"device-inputsoutputs",children:"Device Inputs/Outputs"}),"\n",(0,t.jsxs)(a.Z,{children:[(0,t.jsx)(l.Z,{value:"src",label:"Source Code",defaults:!0,children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",metastring:'title="PLC/IOs.eta"',children:"<%~ include('./.lib/shift', { count: 8 }) %>\n"})})}),(0,t.jsx)(l.Z,{value:"tgt",label:"Compiled Code",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",metastring:'title="PLC"',children:"\r\nsn74hc165:\r\n- id: sn74hc165_hub\r\n  data_pin: 9 \r\n  clock_pin: 11\r\n  load_pin: 10\r\n  sr_count: 2\r\n\r\nbinary_sensor:\r\n- platform: gpio\r\n  id: input_00_0\r\n  pin:\r\n    sn74hc165: sn74hc165_hub\r\n    number: 0\r\n    inverted: true\r\n- platform: gpio\r\n  id: input_00_1\r\n  pin:\r\n    sn74hc165: sn74hc165_hub\r\n    number: 1\r\n    inverted: true\r\n- platform: gpio\r\n  id: input_00_2\r\n  pin:\r\n    sn74hc165: sn74hc165_hub\r\n    number: 2\r\n    inverted: true\r\n- platform: gpio\r\n  id: input_00_3\r\n  pin:\r\n    sn74hc165: sn74hc165_hub\r\n    number: 3\r\n    inverted: true\r\n- platform: gpio\r\n  id: input_00_4\r\n  pin:\r\n    sn74hc165: sn74hc165_hub\r\n    number: 4\r\n    inverted: true\r\n- platform: gpio\r\n  id: input_00_5\r\n  pin:\r\n    sn74hc165: sn74hc165_hub\r\n    number: 5\r\n    inverted: true\r\n- platform: gpio\r\n  id: input_00_6\r\n  pin:\r\n    sn74hc165: sn74hc165_hub\r\n    number: 6\r\n    inverted: true\r\n- platform: gpio\r\n  id: input_00_7\r\n  pin:\r\n    sn74hc165: sn74hc165_hub\r\n    number: 7\r\n    inverted: true\r\n\r\nsn74hc595:\r\n- id: sn74hc595_hub\r\n  data_pin: 12\r\n  clock_pin: 13\r\n  latch_pin: 14\r\n  sr_count: 1\r\n\r\nswitch:\r\n- platform: gpio\r\n  id: output_00_0\r\n  pin:\r\n    sn74hc595: sn74hc595_hub\r\n    number: 0\r\n- platform: gpio\r\n  id: output_00_1\r\n  pin:\r\n    sn74hc595: sn74hc595_hub\r\n    number: 1\r\n- platform: gpio\r\n  id: output_00_2\r\n  pin:\r\n    sn74hc595: sn74hc595_hub\r\n    number: 2\r\n- platform: gpio\r\n  id: output_00_3\r\n  pin:\r\n    sn74hc595: sn74hc595_hub\r\n    number: 3\r\n- platform: gpio\r\n  id: output_00_4\r\n  pin:\r\n    sn74hc595: sn74hc595_hub\r\n    number: 4\r\n- platform: gpio\r\n  id: output_00_5\r\n  pin:\r\n    sn74hc595: sn74hc595_hub\r\n    number: 5\r\n- platform: gpio\r\n  id: output_00_6\r\n  pin:\r\n    sn74hc595: sn74hc595_hub\r\n    number: 6\r\n- platform: gpio\r\n  id: output_00_7\r\n  pin:\r\n    sn74hc595: sn74hc595_hub\r\n    number: 7\n"})})})]}),"\n",(0,t.jsx)(e.p,{children:"With just a few lines of templated code, we\u2019ve generated 80 binary sensors and 80 switches. This dramatically reduces boilerplate and makes your configuration scalable and maintainable."}),"\n",(0,t.jsx)(e.h2,{id:"yaml-patch",children:"YAML Patch"}),"\n",(0,t.jsx)(e.admonition,{type:"warning",children:(0,t.jsx)(e.p,{children:"This feature is experimental and may change in future versions."})}),"\n",(0,t.jsx)(e.p,{children:"When you use templates to generate components (like a large batch of sensors or switches), the result is fast \u2014 but not always flexible. For example, you can't easily change individual names, add automations, or customize behavior per input/output."}),"\n",(0,t.jsxs)(e.p,{children:["That\u2019s where ",(0,t.jsx)(e.strong,{children:"YAML Patch"})," comes in."]}),"\n",(0,t.jsxs)(e.p,{children:["YAML Patch lets you ",(0,t.jsx)(e.strong,{children:"modify specific parts of the generated YAML"})," before it's uploaded to ESPHome. It acts as a post-processing step \u2014 targeting nodes by their IDs and applying changes to them."]}),"\n",(0,t.jsx)(e.p,{children:"You can patch:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["The ",(0,t.jsx)(e.code,{children:"name"})," or ay other property of a component"]}),"\n",(0,t.jsxs)(e.li,{children:["Add ",(0,t.jsx)(e.code,{children:"on_press"}),", ",(0,t.jsx)(e.code,{children:"on_click"}),", or other automation triggers"]}),"\n",(0,t.jsx)(e.li,{children:"Override default options"}),"\n",(0,t.jsx)(e.li,{children:"Add device-specific settings"}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["Let\u2019s say you want to change the name of the binary sensor with ID ",(0,t.jsx)(e.code,{children:"input_03_2"}),". You can patch that \u2014 and multiple other components \u2014 in the same file:"]}),"\n",(0,t.jsxs)(a.Z,{children:[(0,t.jsx)(l.Z,{value:"src",label:"Source Code",defaults:!0,children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",metastring:"PLC/names.patch.yaml showLineNumbers",children:'- $.switch[?(@.id=="output_01_2")]:\r\n    - set:\r\n        name: "Ceiling light"\r\n- $.binary_sensor[?(@.id=="input_05_1")]:\r\n    - set:\r\n        name: "Wall button"\r\n    - set:\r\n        on_state:\r\n            then:\r\n                - switch.toggle: output_01_2\n'})})}),(0,t.jsx)(l.Z,{value:"tgt",label:"Compiled Code",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'...\r\n  - platform: gpio\r\n    id: output_01_2\r\n    pin:\r\n      sn74hc595: sn74hc595_hub\r\n      number: 10\r\n    // highlight-next-line\r\n    name: "Ceiling light"\r\n...\r\n  - platform: gpio\r\n    id: input_05_1\r\n    pin:\r\n      sn74hc165: sn74hc165_hub\r\n      number: 41\r\n      inverted: true\r\n    // highlight-start\r\n    name: "Wall button"\r\n    on_state:\r\n      then:\r\n        - switch.toggle: output_01_2\r\n    // highlight-end\r\n...\n'})})})]}),"\n",(0,t.jsx)(e.p,{children:"How It Works"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"All YAMLs are generated as usual."}),"\n",(0,t.jsxs)(e.li,{children:["Editor 4 ESPHome scans the device directory for ",(0,t.jsx)(e.code,{children:".patch"})," files."]}),"\n",(0,t.jsx)(e.li,{children:"Each patch file is applied to the device YAML config."}),"\n",(0,t.jsx)(e.li,{children:"The final YAML is assembled."}),"\n"]})]})}function p(n={}){let{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},5525:function(n,e,r){r.d(e,{Z:()=>s});var i=r(5893);r(7294);var t=r(7026);function s(n){let{children:e,hidden:r,className:s}=n;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.Z)("tabItem_Ymn6",s),hidden:r,children:e})}},7902:function(n,e,r){r.d(e,{Z:()=>g});var i=r(5893),t=r(7294),s=r(7026),a=r(9599),l=r(6550),o=r(2e3),c=r(4520),u=r(8341),h=r(6009);function d(n){return t.Children.toArray(n).filter(n=>"\n"!==n).map(n=>{if(!n||(0,t.isValidElement)(n)&&function(n){let{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(n){let{value:e,tabValues:r}=n;return r.some(n=>n.value===e)}var m=r(7227);function f(n){let{className:e,block:r,selectedValue:t,selectValue:l,tabValues:o}=n,c=[],{blockElementScrollPositionUntilNextRender:u}=(0,a.o5)(),h=n=>{let e=n.currentTarget,r=o[c.indexOf(e)].value;r!==t&&(u(e),l(r))},d=n=>{let e=null;switch(n.key){case"Enter":h(n);break;case"ArrowRight":{let r=c.indexOf(n.currentTarget)+1;e=c[r]??c[0];break}case"ArrowLeft":{let r=c.indexOf(n.currentTarget)-1;e=c[r]??c[c.length-1]}}e?.focus()};return(0,i.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":r},e),children:o.map(n=>{let{value:e,label:r,attributes:a}=n;return(0,i.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:n=>{c.push(n)},onKeyDown:d,onClick:h,...a,className:(0,s.Z)("tabs__item","tabItem_LNqP",a?.className,{"tabs__item--active":t===e}),children:r??e},e)})})}function _(n){let{lazy:e,children:r,selectedValue:a}=n,l=(Array.isArray(r)?r:[r]).filter(Boolean);if(e){let n=l.find(n=>n.props.value===a);return n?(0,t.cloneElement)(n,{className:(0,s.Z)("margin-top--md",n.props.className)}):null}return(0,i.jsx)("div",{className:"margin-top--md",children:l.map((n,e)=>(0,t.cloneElement)(n,{key:e,hidden:n.props.value!==a}))})}function b(n){let e=function(n){let{defaultValue:e,queryString:r=!1,groupId:i}=n,s=function(n){let{values:e,children:r}=n;return(0,t.useMemo)(()=>{let n=e??d(r).map(n=>{let{props:{value:e,label:r,attributes:i,default:t}}=n;return{value:e,label:r,attributes:i,default:t}}),i=(0,u.lx)(n,(n,e)=>n.value===e.value);if(i.length>0)throw Error(`Docusaurus error: Duplicate values "${i.map(n=>n.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return n},[e,r])}(n),[a,m]=(0,t.useState)(()=>(function(n){let{defaultValue:e,tabValues:r}=n;if(0===r.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:r}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${r.map(n=>n.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let i=r.find(n=>n.default)??r[0];if(!i)throw Error("Unexpected error: 0 tabValues");return i.value})({defaultValue:e,tabValues:s})),[f,_]=function(n){let{queryString:e=!1,groupId:r}=n,i=(0,l.k6)(),s=function(n){let{queryString:e=!1,groupId:r}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!r)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:e,groupId:r});return[(0,c._X)(s),(0,t.useCallback)(n=>{if(!s)return;let e=new URLSearchParams(i.location.search);e.set(s,n),i.replace({...i.location,search:e.toString()})},[s,i])]}({queryString:r,groupId:i}),[b,g]=function(n){let{groupId:e}=n,r=e?`docusaurus.tab.${e}`:null,[i,s]=(0,h.Nk)(r);return[i,(0,t.useCallback)(n=>{r&&s.set(n)},[r,s])]}({groupId:i}),x=(()=>{let n=f??b;return p({value:n,tabValues:s})?n:null})();return(0,o.Z)(()=>{x&&m(x)},[x]),{selectedValue:a,selectValue:(0,t.useCallback)(n=>{if(!p({value:n,tabValues:s}))throw Error(`Can't select invalid tab value=${n}`);m(n),_(n),g(n)},[_,g,s]),tabValues:s}}(n);return(0,i.jsxs)("div",{className:(0,s.Z)("tabs-container","tabList__CuJ"),children:[(0,i.jsx)(f,{...e,...n}),(0,i.jsx)(_,{...e,...n})]})}function g(n){let e=(0,m.Z)();return(0,i.jsx)(b,{...n,children:d(n.children)},String(e))}}}]);