"use strict";(self.webpackChunkx=self.webpackChunkx||[]).push([["2110"],{7596:function(e,i,n){n.r(i),n.d(i,{frontMatter:()=>t,default:()=>h,toc:()=>a,metadata:()=>l,assets:()=>d,contentTitle:()=>o});var l=JSON.parse('{"id":"language/disable-file","title":"Disable Source File/Folder","description":"This feature lets you define and switch between different versions (or variants) of a device configuration \u2014 without duplicating your entire ESPHome YAML setup.","source":"@site/docs/03-language/disable-file.md","sourceDirName":"03-language","slug":"/language/disable-file","permalink":"/language/disable-file","draft":false,"unlisted":false,"editUrl":"https://github.com/Morcatko/EspHome-Editor/tree/main/docs/docs/03-language/disable-file.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"sidebar_position":30},"sidebar":"docsSidebar","previous":{"title":"Folder Structure & Files","permalink":"/language/folder-structure"},"next":{"title":"Code Samples","permalink":"/category/code-samples"}}'),s=n(5893),r=n(65);let t={sidebar_position:30},o="Disable Source File/Folder",d={},a=[{value:"How It Works",id:"how-it-works",level:2},{value:"Folder Structure Example",id:"folder-structure-example",level:3},{value:"Disabling a File/Folder in the UI",id:"disabling-a-filefolder-in-the-ui",level:3},{value:"Best Practices",id:"best-practices",level:3},{value:"Limitations",id:"limitations",level:3}];function c(e){let i={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"disable-source-filefolder",children:"Disable Source File/Folder"})}),"\n",(0,s.jsxs)(i.p,{children:["This feature lets you define and switch between different versions (or ",(0,s.jsx)(i.em,{children:"variants"}),") of a device configuration \u2014 without duplicating your entire ESPHome YAML setup."]}),"\n",(0,s.jsx)(i.p,{children:"This is useful for:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Supporting multiple hardware revisions"}),"\n",(0,s.jsx)(i.li,{children:"Toggling optional features (e.g., presence sensor vs. no sensor)"}),"\n",(0,s.jsx)(i.li,{children:"Quickly testing new functionality without changing core templates"}),"\n"]}),"\n",(0,s.jsx)(i.admonition,{type:"warning",children:(0,s.jsx)(i.p,{children:"This feature is currently in development and might change slightly in final version"})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,s.jsx)(i.p,{children:"Disabling a file/fodler will remove it from compilation pipeline. Only enabled files are included in the final YAML output."}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["You can organize variants in subfolders like ",(0,s.jsx)(i.code,{children:"v1"}),", ",(0,s.jsx)(i.code,{children:"v2"}),", ",(0,s.jsx)(i.code,{children:"with_sensor"}),", ",(0,s.jsx)(i.code,{children:"no_sensor"}),", etc."]}),"\n",(0,s.jsx)(i.li,{children:"The editor UI lets you toggle these alternates on or off with a few clicks."}),"\n",(0,s.jsx)(i.li,{children:"Files in disabled folders are completely ignored during preprocessing and YAML assembly."}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"folder-structure-example",children:"Folder Structure Example"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"Alternates",src:n(4826).Z+"",width:"520",height:"296"})}),"\n",(0,s.jsx)(i.p,{children:"In this setup:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Only one of ",(0,s.jsx)(i.code,{children:"display_i2c"})," or ",(0,s.jsx)(i.code,{children:"display_spi"})," should be enabled at a time."]}),"\n",(0,s.jsxs)(i.li,{children:["The rest of the configuration (",(0,s.jsx)(i.code,{children:"device.yaml"}),", ",(0,s.jsx)(i.code,{children:"common.eta"}),") remains shared."]}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"disabling-a-filefolder-in-the-ui",children:"Disabling a File/Folder in the UI"}),"\n",(0,s.jsx)(i.p,{children:"In the device editor:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Open context menu of a file/directory you want to disable"}),"\n",(0,s.jsxs)(i.li,{children:["Click the ",(0,s.jsx)(i.strong,{children:"Disable..."})," menu item."]}),"\n",(0,s.jsx)(i.li,{children:"Enabled files/folders are included in the final YAML."}),"\n",(0,s.jsx)(i.li,{children:"Disabled ones are ignored during build and grayed-out in devices & files panel"}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Use clear folder names like ",(0,s.jsx)(i.code,{children:"v1"}),", ",(0,s.jsx)(i.code,{children:"with_lights"}),", ",(0,s.jsx)(i.code,{children:"test_mode"}),", etc."]}),"\n",(0,s.jsx)(i.li,{children:"Keep folders modular \u2014 isolate them by feature or condition."}),"\n",(0,s.jsx)(i.li,{children:"Avoid overlapping IDs between alternate files unless intentionally overridden."}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"limitations",children:"Limitations"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"This feature works at the file/folder level \u2014 you can\u2019t selectively enable just part of a file."}),"\n",(0,s.jsx)(i.li,{children:"Only one version of a file with the same ID should be active at once to avoid conflicts."}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.p,{children:"This is a simple but powerful way to manage multiple configurations without copy-pasting entire YAMLs."})]})}function h(e={}){let{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},4826:function(e,i,n){n.d(i,{Z:()=>l});let l=n.p+"assets/images/alternates-device-bbe015a22515e4d687642743585804c6.png"}}]);